type User {
  id: Int!
  email: String! # TODO: Add a separate Email scalar type
  login: String!
  name: String
  brews: [Brew!]!
}

type DeletedUser {
  id: Int!
}

type Query {
  users: [User!]!
  user(id: Int!): User
}

input CreateUserInput {
  login: String!
  email: String!
  password: String
  confirmPassword: String
  name: String
}

input UpdateUserInput {
  id: Int!
  email: String
  login: String
  password: String
  confirmPassword: String
  name: String
}

input DeleteUserInput {
  id: Int!
}

type Mutation {
  createUser(createUserInput: CreateUserInput): User
  updateUser(updateUserInput: UpdateUserInput): User
  deleteUser(deleteUserInput: DeleteUserInput): DeletedUser
}
